package mantle.product.price;
dialect  "mvel"
// import org.moqui.context.ExecutionContext
import org.moqui.context.ContextStack
import java.math.BigDecimal

rule "Demo Product One-Two 10% Off"
when
    $context : ContextStack(get("productId") == "DEMO_1_2", get("price") > 0)
    // some examples of other useful expressions, though not useful for this particular rule:
    // $ec : ExecutionContext()
    // $product : org.moqui.entity.EntityValue(getEntityName() == "mantle.product.Product", get("productId") == "DEMO_1_2")
then
    // NOTE: don't call modify or update, results in some sort of crazy recursion or something and fails
    // MVEL doesn't do convenient things like BigDecimal math by default, does double math instead, so this is much more verbose
    $context.put("price", ((BigDecimal) $context.get("price")).multiply(new BigDecimal(0.9)).setScale(2, BigDecimal.ROUND_HALF_UP));
end
