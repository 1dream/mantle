<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

<!-- STATUS: EXPERIMENTAL -->
    
    <service verb="calculate" noun="FinancialAccountTotals">
        <description>Calculates totals from FinancialAccountTrans and FinancialAccountAuth records, records them
            on the FinancialAccount record and returns them.</description>
        <in-parameters>
            <parameter name="finAccountId"/>
            <parameter name="finAccountTransId"/>
            <parameter name="finAccountAuthId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="currencyUomId"/>
            <parameter name="actualBalance" type="BigDecimal"/>
            <parameter name="authBalance" type="BigDecimal"/>
            <parameter name="availableBalance" type="BigDecimal"/>
        </out-parameters>
        <actions>
            <if condition="!finAccountId &amp;&amp; finAccountTransId">
                <entity-find-one entity-name="mantle.account.financial.FinancialAccountTrans" value-field="fat"/>
                <set field="finAccountId" from="fat?.finAccountId"/>
            </if>
            <if condition="!finAccountId &amp;&amp; finAccountAuthId">
                <entity-find-one entity-name="mantle.account.financial.FinancialAccountAuth" value-field="faa"/>
                <set field="finAccountId" from="faa?.finAccountId"/>
            </if>
            <if condition="!finAccountId"><return error="true" message="Cannot calculate Financial Account totals, no finAccountId passed"/></if>

            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"
                    for-update="true"/>
            <set field="currencyUomId" from="financialAccount.currencyUomId"/>

            <entity-find entity-name="mantle.account.financial.FinancialAccountActualView" list="faaList">
                <econdition field-name="finAccountId"/></entity-find>
            <set field="actualBalance" from="faaList?.first?.actualBalance ?: 0"/>

            <entity-find entity-name="mantle.account.financial.FinancialAccountAuthView" list="faaList">
                <econdition field-name="finAccountId"/>
                <econdition field-name="expireDate" operator="greater" from="ec.user.nowTimestamp" or-null="true"/>
                <select-field field-name="finAccountId"/><select-field field-name="authBalance"/>
            </entity-find>
            <set field="authBalance" from="faaList?.first?.authBalance ?: 0"/>

            <set field="availableBalance" from="actualBalance - authBalance"/>

            <set field="financialAccount.actualBalance" from="actualBalance"/>
            <set field="financialAccount.availableBalance" from="availableBalance"/>
            <entity-update value-field="financialAccount"/>
        </actions>
    </service>

    <service verb="adjust" noun="FinancialAccount">
        <in-parameters>
            <auto-parameters entity-name="mantle.account.financial.FinancialAccountTrans" include="nonpk">
                <exclude field-name="finAccountTransTypeEnumId"/>
                <exclude field-name="finAccountAuthId"/>
            </auto-parameters>
            <parameter name="finAccountId" required="true"/>
            <parameter name="amount" type="BigDecimal" required="true"/>
            <parameter name="transactionDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="entryDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <!-- maybe support in the future with currency conversion: <parameter name="amountUomId"/> -->
            <!-- <parameter name="isRefund" type="Boolean" default-value="false"/> -->
        </in-parameters>
        <out-parameters>
            <parameter name="preBalance" type="BigDecimal"/>
            <parameter name="postBalance" type="BigDecimal"/>
            <parameter name="finAccountTransId"/>
        </out-parameters>
        <actions>
            <!-- do a for-update query to lock the FinancialAccount record -->
            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"
                    for-update="true"/>
            <set field="preBalance" from="financialAccount.actualBalance"/>

            <set field="finAccountTransTypeEnumId" value="FattAdjustment"/>
            <service-call name="create#mantle.account.financial.FinancialAccountTrans" in-map="context" out-map="context"/>

            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="postFinancialAccount"/>
            <set field="postBalance" from="postFinancialAccount.actualBalance"/>

            <set field="differAmount" from="preBalance - postBalance"/>
            <if condition="differAmount != amount">
                <return error="true" message="Error adjusting financial account [${finAccountId}], pre balance ${preBalance} and post balance ${postBalance} differ by ${differAmount} and not by transaction amount ${amount}"/>
            </if>
        </actions>
    </service>

    <service verb="deposit" noun="FinancialAccount">
        <in-parameters>
            <auto-parameters entity-name="mantle.account.financial.FinancialAccountTrans" include="nonpk">
                <exclude field-name="finAccountTransTypeEnumId"/>
                <exclude field-name="finAccountAuthId"/>
            </auto-parameters>
            <parameter name="finAccountId" required="true"/>
            <parameter name="amount" type="BigDecimal" required="true"/>
            <parameter name="transactionDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="entryDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <!-- maybe support in the future with currency conversion: <parameter name="amountUomId"/> -->
            <!-- <parameter name="isRefund" type="Boolean" default-value="false"/> -->
        </in-parameters>
        <out-parameters>
            <parameter name="preBalance" type="BigDecimal"/>
            <parameter name="postBalance" type="BigDecimal"/>
            <parameter name="finAccountTransId"/>
        </out-parameters>
        <actions>
            <!-- do a for-update query to lock the FinancialAccount record -->
            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"
                    for-update="true"/>
            <set field="preBalance" from="financialAccount.actualBalance"/>

            <set field="finAccountTransTypeEnumId" value="FattDeposit"/>
            <service-call name="create#mantle.account.financial.FinancialAccountTrans" in-map="context" out-map="context"/>

            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="postFinancialAccount"/>
            <set field="postBalance" from="postFinancialAccount.actualBalance"/>

            <set field="differAmount" from="preBalance - postBalance"/>
            <if condition="differAmount != amount">
                <return error="true" message="Error adjusting financial account [${finAccountId}], pre balance ${preBalance} and post balance ${postBalance} differ by ${differAmount} and not by transaction amount ${amount}"/>
            </if>
        </actions>
    </service>
    <service verb="withdraw" noun="FinancialAccount">
        <in-parameters>
            <auto-parameters entity-name="mantle.account.financial.FinancialAccountTrans" include="nonpk">
                <exclude field-name="finAccountTransTypeEnumId"/>
            </auto-parameters>
            <parameter name="finAccountId" required="true"/>
            <parameter name="amount" type="BigDecimal" required="true"/>
            <parameter name="transactionDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="entryDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <!-- maybe support in the future with currency conversion: <parameter name="amountUomId"/> -->
            <!-- <parameter name="isRefund" type="Boolean" default-value="false"/> -->
        </in-parameters>
        <out-parameters>
            <parameter name="preBalance" type="BigDecimal"/>
            <parameter name="postBalance" type="BigDecimal"/>
            <parameter name="finAccountTransId"/>
        </out-parameters>
        <actions>
            <!-- do a for-update query to lock the FinancialAccount record -->
            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"
                    for-update="true"/>
            <set field="preBalance" from="financialAccount.actualBalance"/>

            <set field="finAccountTransTypeEnumId" value="FattWithdraw"/>
            <service-call name="create#mantle.account.financial.FinancialAccountTrans" in-map="context" out-map="context"/>

            <if condition="finAccountAuthId">
                <!-- if there is an auth, expire it -->
                <service-call name="update#mantle.account.financial.FinancialAccountAuth"
                        in-map="[finAccountAuthId:finAccountAuthId, expireDate:ec.user.nowTimestamp]"/>
            </if>

            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="postFinancialAccount"/>
            <set field="postBalance" from="postFinancialAccount.actualBalance"/>

            <set field="differAmount" from="preBalance - postBalance"/>
            <if condition="differAmount != amount">
                <return error="true" message="Error adjusting financial account [${finAccountId}], pre balance ${preBalance} and post balance ${postBalance} differ by ${differAmount} and not by transaction amount ${amount}"/>
            </if>
        </actions>
    </service>

    <service verb="authorize" noun="FinancialAccount">
        <in-parameters>
            <parameter name="finAccountId" required="true"/>
            <parameter name="amount" type="BigDecimal" required="true"/>
            <parameter name="authorizationDate" type="Timestamp" default-value="ec.user.nowTimestamp"/>
            <parameter name="expireDate" type="Timestamp" required="true"/><!-- TODO: default this based on some sort of setting? -->
        </in-parameters>
        <out-parameters>
            <parameter name="preAvailableBalance" type="BigDecimal"/>
            <parameter name="postAvailableBalance" type="BigDecimal"/>
            <parameter name="finAccountAuthId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="financialAccount"
                    for-update="true"/>
            <set field="preAvailableBalance" from="financialAccount.availableBalance"/>

            <service-call name="create#mantle.account.financial.FinancialAccountAuth" in-map="context" out-map="context"/>

            <entity-find-one entity-name="mantle.account.financial.FinancialAccount" value-field="postFinancialAccount"/>
            <set field="postAvailableBalance" from="postFinancialAccount.actualBalance"/>

            <set field="differAmount" from="preAvailableBalance - postAvailableBalance"/>
            <if condition="differAmount != amount">
                <return error="true" message="Error adjusting financial account [${finAccountId}], pre balance ${preAvailableBalance} and post balance ${postAvailableBalance} differ by [${differAmount}] and not by transaction amount ${amount}"/>
            </if>
        </actions>
    </service>
    <service verb="expire" noun="FinancialAccountAuth">
        <in-parameters>
            <parameter name="finAccountAuthId" required="true"/>
            <parameter name="expireDate" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <actions>
            <service-call name="update#mantle.account.financial.FinancialAccountAuth" in-map="context"/>
        </actions>
    </service>

    <!-- Financial Account Payment Processing Services -->
    <service verb="authorize" noun="FinancialAccountPayment">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
    <service verb="capture" noun="FinancialAccountPayment">
        <implements service="mantle.account.PaymentServices.capture#Payment"/>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
    <service verb="release" noun="FinancialAccountPayment">
        <implements service="mantle.account.PaymentServices.release#Payment"/>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
    <service verb="refund" noun="FinancialAccountPayment">
        <implements service="mantle.account.PaymentServices.refund#Payment"/>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
</services>
