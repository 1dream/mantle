<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.3.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <service verb="post" noun="Payment">
        <in-parameters><parameter name="paymentId" required="true"/></in-parameters>
        <out-parameters><parameter name="acctgTransId"/></out-parameters>
        <actions>
            <!-- make sure there is no AcctgTrans for this paymentId -->
            <entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="existingTransList">
                <econdition field-name="paymentId"/>
            </entity-find>
            <if condition="existingTransList">
                <return error="true" message="Payment [${paymentId}] has already been posted in accounting transaction [${existingTransList[0].acctgTransId}]"/>
            </if>

            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <if condition="!payment"><return error="true" message="Could not find Payment with ID [${paymentId}]"/></if>

            <!-- is there a OrgInternal PartyRole for from/to parties, and PartyAcctgPreference for the from/to parties or parent orgs of them? -->
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="fromPartyRole">
                <field-map field-name="partyId" from="payment.overrideOrgPartyId ?: payment.fromPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="fromPartyRole">
                <service-call name="mantle.ledger.LedgerServices.find#PartyAcctgPreference" out-map="fromPapOut"
                        in-map="[organizationPartyId:fromPartyRole.partyId]"/>
                <set field="fromPartyAcctgPreference" from="fromPapOut.partyAcctgPreference"/>
            </if>

            <entity-find-one entity-name="mantle.party.PartyRole" value-field="toPartyRole">
                <field-map field-name="partyId" from="payment.overrideOrgPartyId ?: payment.toPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="toPartyRole">
                <service-call name="mantle.ledger.LedgerServices.find#PartyAcctgPreference" out-map="toPapOut"
                        in-map="[organizationPartyId:toPartyRole.partyId]"/>
                <set field="toPartyAcctgPreference" from="toPapOut.partyAcctgPreference"/>
            </if>

            <!-- if no preferences for from or to, we shouldn't post anything -->
            <if condition="!fromPartyAcctgPreference &amp;&amp; !toPartyAcctgPreference">
                <log level="info" message="Not posting payment [${paymentId}], could not find PartyAcctgPreference for From Party [${payment.fromPartyId}], To Party [${payment.toPartyId}], or Override Party [${payment.overrideOrgPartyId}]"/>
                <return/>
            </if>

            <!-- keep track of if we should put in the error journal or post -->
            <set field="useErrorJournal" from="false"/>

            <!--
                For incoming payments (internal org is toPartyId)
                C side based on Payment type (and corresponding Invoice type?)
                D side based on PaymentMethod

                For outgoing payments (internal org is fromPartyId)
                D side based on Payment type (and corresponding Invoice type?)
                C side based on PaymentMethod
            -->


            <!-- get applied and unapplied totals, are posted differently -->
            <set field="appliedTotal" from="0"/>
            <entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList">
                <econdition field-name="paymentId"/>
            </entity-find>
            <iterate list="paymentApplicationList" entry="paymentApplication">
                <set field="appliedTotal" from="appliedTotal + paymentApplication.amountApplied"/>
            </iterate>
            <set field="unappliedTotal" from="payment.amount - appliedTotal"/>

            <!-- TODO: create entries for applied and unapplied totals, as applicable, based on Payment type -->
            <if condition="appliedTotal">
                <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentGlAccount" out-map="appliedGla"
                    in-map="[paymentId:paymentId, organizationPartyId:TODO, otherPartyId:TODO, isApplied:'Y']"/>
            </if>

            <!-- TODO: create balancing entry for PaymentMethod -->

            <!-- TODO: implement this... -->

        </actions>
    </service>
    <service verb="get" noun="PaymentGlAccount">
        <in-parameters>
            <parameter name="paymentId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="otherPartyId"/>
            <parameter name="isApplied" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="glAccountId"/>
            <parameter name="glAccountTypeEnumId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="mantle.ledger.LedgerServices.expand#ParentOrganizationList" out-map="context"
                    in-map="[organizationPartyId:organizationPartyId]"/>

            <set field="isPayable" from="organizationPartyId == payment.fromPartyId ? 'Y' : 'N'"/>
            <entity-find entity-name="mantle.ledger.config.PaymentTypeGlAccount" list="paymentTypeGlAccountList" cache="true">
                <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                <econdition field-name="paymentTypeEnumId" from="payment.paymentTypeEnumId"/>
                <econdition field-name="isApplied"/>
                <econdition field-name="isPayable"/>
            </entity-find>
            <set field="glAccountId" from="paymentTypeGlAccountList.getAt(0)?.glAccountId"/>
        </actions>
    </service>
    <service verb="get" noun="PaymentMethodGlAccount">
        <in-parameters>
            <parameter name="paymentMethodTypeEnumId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="otherPartyId"/>
            <parameter name="finAccountTypeId"/>
            <parameter name="creditCardTypeEnumId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="glAccountId"/>
            <parameter name="glAccountTypeEnumId"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.ledger.LedgerServices.expand#ParentOrganizationList" out-map="context"
                    in-map="[organizationPartyId:organizationPartyId]"/>

            <if condition="paymentMethodTypeEnumId == 'PmtCreditCard'">
                <entity-find entity-name="mantle.ledger.config.CreditCardTypeGlAccount" list="creditCardTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="creditCardTypeEnumId"/>
                </entity-find>
                <set field="glAccountId" from="creditCardTypeGlAccountList.getAt(0)?.glAccountId"/>
            </if>
            <if condition="paymentMethodTypeEnumId == 'FinancialAccountTypeGlAccount'">
                <entity-find entity-name="mantle.ledger.config.PaymentMethodTypeGlAccount" list="financialAccountTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="finAccountTypeId"/>
                </entity-find>
                <set field="glAccountId" from="financialAccountTypeGlAccountList.getAt(0)?.glAccountId"/>
            </if>

            <if condition="!glAccountId">
                <entity-find entity-name="mantle.ledger.config.PaymentMethodTypeGlAccount" list="paymentMethodTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="paymentMethodTypeEnumId"/>
                </entity-find>
                <set field="glAccountId" from="paymentMethodTypeGlAccountList.getAt(0)?.glAccountId"/>
            </if>
        </actions>
    </service>

    <service verb="post" noun="PaymentApplication">
        <in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters>
        <out-parameters><parameter name="acctgTransId"/></out-parameters>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
    <!-- needed?
    <service verb="post" noun="CustomerRefundPaymentApplication">
        <in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters>
        <out-parameters><parameter name="acctgTransId"/></out-parameters>
        <actions>
            <!- - TODO: implement this... - ->
        </actions>
    </service>
    -->
    <service verb="revert" noun="PaymentApplicationPostOnRemove">
        <in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
</services>
