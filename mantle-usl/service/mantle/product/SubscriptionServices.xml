<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.4.xsd">

    <!-- STATUS: EXPERIMENTAL -->

    <service verb="init" noun="SubscriptionResource" type="interface">
        <in-parameters><parameter name="subscriptionId" required="true"/></in-parameters>
    </service>
    <service verb="revoke" noun="SubscriptionResourceAccess" type="interface">
        <in-parameters><parameter name="subscriptionId" required="true"/></in-parameters>
    </service>
    <service verb="destroy" noun="SubscriptionResource" type="interface">
        <in-parameters><parameter name="subscriptionId" required="true"/></in-parameters>
    </service>

    <service verb="fulfill" noun="OrderPartSubscriptions">
        <description>When an order goes to the OrderApproved status (by SECA rule) looks for digital products on the
            order with ProductSubscriptionResource records, and if there is no Subscription record for the OrderItem
            and SubscriptionResource then fulfills the ProductSubscriptionResource and bills for the OrderItem.</description>
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.order.OrderItem" list="orderItemList">
                <econdition field-name="orderId"/><econdition field-name="orderPartSeqId"/>
                <order-by field-name="orderItemSeqId"/>
            </entity-find>

            <set field="fulfilledOrderItemList" from="[]"/>
            <iterate list="orderItemList" entry="orderItem">
                <set field="product" from="orderItem.'mantle.product.Product'"/>
                <if condition="product?.productTypeEnumId in ['PtDigital', 'PtDigPhysGood']">
                    <set field="productSubscriptionResourceList" from="product.'mantle.product.subscription.ProductSubscriptionResource'"/>
                    <iterate list="productSubscriptionResourceList" entry="productSubscriptionResource">
                        <!-- make sure this hasn't been fulfilled yet -->
                        <entity-find entity-name="mantle.product.subscription.Subscription" list="existingSubscriptionList">
                            <econdition field-name="orderId" from="orderItem.orderId"/>
                            <econdition field-name="orderItemSeqId" from="orderItem.orderItemSeqId"/>
                            <econdition field-name="subscriptionResourceId" from="productSubscriptionResource.subscriptionResourceId"/>
                        </entity-find>

                        <if condition="!existingSubscriptionList">
                            <service-call name="mantle.product.SubscriptionServices.fulfill#ProductSubscriptionResource"
                                    in-map="[orderId:orderItem.orderId, orderItemSeqId:orderItem.orderItemSeqId,
                                        productId:orderItem.productId,
                                        subscriptionResourceId:productSubscriptionResource.subscriptionResourceId,
                                        fromDate:productSubscriptionResource.fromDate]"/>
                            <script>fulfilledOrderItemList.add(orderItem)</script>
                        </if>
                    </iterate>
                </if>
            </iterate>

            <!-- invoice items in fulfilledOrderItemList -->
            <if condition="fulfilledOrderItemList">
                <service-call name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice"
                        in-map="context + [statusId:'InvoiceFinalized', partialOrderItemList:fulfilledOrderItemList]"/>
            </if>

            <!-- TODO: capture payment (apply order payment to invoice) -->

            <!-- TODO: complete order part if all items in it are fulfilled; done elsewhere? (see if individual item is fulfilled) -->
            <!-- TODO: only consider PtDigital items done, not PtDigPhysGood -->
            <!-- <service-call name="mantle.order.OrderServices.complete#OrderPart"
                    in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId]"/> -->
        </actions>
    </service>
    <service verb="fulfill" noun="ProductSubscriptionResource">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderItemSeqId" required="true"/>
            <parameter name="productId" required="true"/>
            <parameter name="subscriptionResourceId" required="true"/>
            <parameter name="fromDate" required="false"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.product.subscription.ProductSubscriptionResource"
                    value-field="productSubscriptionResource"/>

            <!-- TODO: create Subscription record -->
            
            <!-- TODO: call init service -->
            
        </actions>
    </service>
</services>
