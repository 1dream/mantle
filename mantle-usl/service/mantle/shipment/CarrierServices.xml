<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.3.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <!-- ============================= -->
    <!-- Shipping Gateway Interfaces -->
    <!-- ============================= -->

    <service verb="estimate" noun="OrderShippingRate" type="interface">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>
    <service verb="estimate" noun="ShippingRate" type="interface">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="shipmentRouteSegmentSeqId"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>
    <service verb="request" noun="ShippingLabels" type="interface">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="shipmentPackageSeqId"/>
            <parameter name="shipmentRouteSegmentSeqId"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>
    <service verb="void" noun="ShippingLabels" type="interface">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="shipmentPackageSeqId"/>
            <parameter name="shipmentRouteSegmentSeqId"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>
    <service verb="track" noun="ShippingLabels" type="interface">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="shipmentPackageSeqId"/>
            <parameter name="shipmentRouteSegmentSeqId"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>
    <service verb="validate" noun="ShippingPostalAddress" type="interface">
        <in-parameters>
            <parameter name="contactMechId" required="true"/>
            <parameter name="shippingGatewayConfigId" required="true"/>
        </in-parameters>
    </service>

    <!-- ==================================== -->
    <!-- Order and Shipment Shipping Services -->
    <!-- ==================================== -->

    <service verb="estimate" noun="OrderShipping" transaction="cache">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="shippingGatewayConfigId"><description>Optional if OrderHeader.productStoreId is populated
                and a corresponding ProductStoreShippingGateway record exists.</description></parameter>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.order.OrderPart" list="orderPartList"><econdition field-name="orderId"/></entity-find>
            <iterate list="orderPartList" entry="orderPart">
                <service-call name="mantle.shipment.CarrierServices.estimate#OrderPartShipping"
                        in-map="[orderId:orderId, orderPartSeqId:orderPart.orderPartSeqId, shippingGatewayConfigId:shippingGatewayConfigId]"/>
            </iterate>
        </actions>
    </service>
    <service verb="estimate" noun="OrderPartShipping">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="shippingGatewayConfigId"><description>Optional if OrderHeader.productStoreId is populated
                and a corresponding ProductStoreShippingGateway record exists.</description></parameter>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader"/>
            <entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart"/>

            <if condition="!shippingGatewayConfigId">
                <if condition="!orderHeader.productStoreId"><return error="true"
                        message="Could not get order shipping estimate, order is not associated with a store and no gateway config ID specified."/></if>

                <entity-find-one entity-name="mantle.product.store.ProductStoreShippingGateway"
                        value-field="productStoreShippingGateway">
                    <field-map field-name="productStoreId" from="orderHeader.productStoreId"/>
                    <field-map field-name="carrierPartyId" from="orderPart.carrierPartyId"/>
                </entity-find-one>
                <set field="shippingGatewayConfigId" from="productStoreShippingGateway?.shippingGatewayConfigId"/>
            </if>
            <entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayConfig" value-field="shippingGatewayConfig"/>
            <if condition="shippingGatewayConfig == null"><return error="true"
                    message="Could not get order shipping estimate, no gateway configuration found."/></if>

            <!-- TODO: if order has shipping lines clear them out first -->

            <!-- TODO: call gateway (could be local) service to estimate shipping charges -->

            <!-- TODO: implement this... -->
        </actions>
    </service>

</services>
