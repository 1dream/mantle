<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

    <!-- STATUS: EXPERIMENTAL -->

    <service verb="get" noun="FullCalendarData">
        <description>Get data to display WorkEffort events with the FullCalender JS library (see http://fullcalendar.io/)</description>
        <in-parameters>
            <parameter name="facilityId"/>
            <parameter name="facilityIdList"/>
            <parameter name="partyId"/>
            <parameter name="partyIdList"/>
            <parameter name="start" required="true"/>
            <parameter name="end" required="true"/>
            <parameter name="titleGString" default-value="\${(workEffort.workEffortName ?: (workEffort.purposeEnumId ? workEffort.'WorkEffortPurpose#moqui.basic.Enumeration'.description : 'Event')) + ' [' + workEffort.workEffortId + ']'}"/>
            <parameter name="urlGString"/>
        </in-parameters>
        <out-parameters>
            <parameter name="eventList" type="List">
                <parameter name="eventMap" type="Map">
                    <parameter name="id"/>
                    <parameter name="title"/>
                    <parameter name="start"><description>estimatedStartDate as ISO8601 formatted String</description></parameter>
                    <parameter name="end"><description>estimatedCompletionDate (or if null estimatedStartDate +
                        estimatedWorkTime) as a ISO8601 (yyyy-MM-dd'T'HH:mm:ss) formatted String</description></parameter>
                    <!-- NOTE: consider supporting allDay, color, etc in the future with WorkEffort fields -->
                    <parameter name="url"><description>Only returned if urlGString is specified</description></parameter>
                </parameter>
            </parameter>
        </out-parameters>
        <actions>
            <!--
            <set field="startTs" from="ec.l10n.parseTimestamp(start.toString() + ' 00:00:00.000', 'yyyy-MM-dd HH:mm:ss.SSS')"/>
            <set field="endTs" from="ec.l10n.parseTimestamp(end.toString() + ' 23:59:59.999', 'yyyy-MM-dd HH:mm:ss.SSS')"/>
            -->
            <!-- start/end are coming in as seconds since epoch -->
            <set field="startTs" from="ec.l10n.parseTimestamp(start + '000', null)"/>
            <set field="endTs" from="ec.l10n.parseTimestamp(end + '000', null)"/>

            <!-- <log level="warn" message="=========== FullCalendarData start ${start} - ${startTs} end ${end} - ${endTs}"/> -->

            <set field="facilityIdSet" from="new HashSet()"/>
            <if condition="facilityId"><script>facilityIdSet.add(facilityId)</script></if>
            <if condition="facilityIdList"><script>facilityIdSet.addAll(facilityIdList)</script></if>
            <set field="partyIdSet" from="new HashSet()"/>
            <if condition="partyId"><script>partyIdSet.add(partyId)</script></if>
            <if condition="partyIdList"><script>partyIdSet.addAll(partyIdList)</script></if>

            <entity-find entity-name="mantle.work.effort.WorkEffortPartyAsset" list="workEffortList">
                <econdition field-name="workEffortTypeEnumId" value="WetEvent"/>
                <econdition field-name="facilityId" operator="in" from="facilityIdSet" ignore-if-empty="true"/>
                <econdition field-name="partyId" operator="in" from="partyIdSet" ignore-if-empty="true"/>
                <econdition field-name="estimatedStartDate" operator="greater-equals" from="startTs"/>
                <econdition field-name="estimatedStartDate" operator="less-equals" from="endTs"/>
                <select-field field-name="workEffortId"/><select-field field-name="purposeEnumId"/>
                <select-field field-name="workEffortName"/>
                <select-field field-name="description"/><select-field field-name="location"/>
                <select-field field-name="estimatedStartDate"/><select-field field-name="estimatedCompletionDate"/>
                <select-field field-name="estimatedWorkTime"/>
            </entity-find>

            <set field="eventList" from="[]"/>
            <iterate list="workEffortList" entry="workEffortDef">
                <set field="workEffort" from="workEffortDef"/><!-- put it in the context -->
                <set field="title" from="ec.resource.evaluateStringExpand(titleGString, '')"/>
                <set field="start" from="ec.l10n.format(workEffort.estimatedStartDate, 'yyyy-MM-dd\'T\'HH:mm:ss')"/>
                <if condition="workEffort.estimatedCompletionDate">
                    <set field="end" from="ec.l10n.format(workEffort.estimatedCompletionDate, 'yyyy-MM-dd\'T\'HH:mm:ss')"/>
                    <else>
                        <set field="estMinutes" from="((workEffort.estimatedWorkTime ?: 1) * 60) as int"/>
                        <script>
                            Calendar endCal = ec.user.getCalendarSafe()
                            endCal.setTimeInMillis(workEffort.estimatedStartDate.time)
                            endCal.add(Calendar.MINUTE, estMinutes)
                            end = ec.l10n.format(new Timestamp(endCal.getTimeInMillis()), 'yyyy-MM-dd\'T\'HH:mm:ss')
                        </script>
                    </else>
                </if>
                <if condition="urlGString">
                    <set field="url" from="ec.resource.evaluateStringExpand(urlGString, '')"/>
                    <else><set field="url" value=""/></else>
                </if>
                <set field="eventMap" from="[id:workEffort.workEffortId, title:title, start:start, end:end, url:url, allDay:false]"/>
                <script>eventList.add(eventMap)</script>
            </iterate>
        </actions>
    </service>

    <service verb="clone" noun="WorkEffort">
        <in-parameters>
            <parameter name="baseWorkEffortId" required="true"/>
            <auto-parameters entity-name="mantle.work.effort.WorkEffort" include="nonpk"/>
            <parameter name="statusId" default-value="WeInPlanning"/>
            <parameter name="deepClone" type="Boolean" default="false"><description>If true recursively clone all children.</description></parameter>
            <parameter name="clearDates" type="Boolean" default="false"/>
            <parameter name="copyAssetAssign" type="Boolean" default="false"/>
            <parameter name="copyAssetNeeded" type="Boolean" default="true"/>
            <parameter name="copyAssoc" type="Boolean" default="false"/>
            <parameter name="copyCommEvent" type="Boolean" default="false"/>
            <parameter name="copyContactMech" type="Boolean" default="true"/>
            <parameter name="copyContent" type="Boolean" default="true"/>
            <parameter name="copyNote" type="Boolean" default="true"/>
            <parameter name="copyParty" type="Boolean" default="false"/>
            <parameter name="copyProduct" type="Boolean" default="true"/>
            <parameter name="copySkillStandard" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters><parameter name="workEffortId"/></out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort">
                <field-map field-name="workEffortId" from="baseWorkEffortId"/></entity-find-one>

            <entity-set value-field="workEffort" include="nonpk"/>
            <if condition="clearDates">
                <!-- set the fields even if null, don't do this for other fields -->
                <set field="workEffort.estimatedStartDate" from="estimatedStartDate"/>
                <set field="workEffort.estimatedCompletionDate" from="estimatedCompletionDate"/>
                <set field="workEffort.actualStartDate" from="actualStartDate"/>
                <set field="workEffort.actualCompletionDate" from="actualCompletionDate"/>
            </if>

            <set field="workEffort.workEffortId" from="null"/>
            <entity-sequenced-id-primary value-field="workEffort"/>
            <entity-create value-field="workEffort"/>
            <set field="workEffortId" from="workEffort.workEffortId"/>

            <if condition="copyAssetAssign">
                <entity-find entity-name="mantle.work.effort.WorkEffortAssetAssign" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyAssetNeeded">
                <entity-find entity-name="mantle.work.effort.WorkEffortAssetNeeded" list="valueList">
                    <econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyAssoc">
                <entity-find entity-name="mantle.work.effort.WorkEffortAssoc" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyCommEvent">
                <entity-find entity-name="mantle.work.effort.WorkEffortCommEvent" list="valueList">
                    <econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyContactMech">
                <entity-find entity-name="mantle.work.effort.WorkEffortContactMech" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyContent">
                <entity-find entity-name="mantle.work.effort.WorkEffortContent" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyNote">
                <entity-find entity-name="mantle.work.effort.WorkEffortNote" list="valueList">
                    <econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyParty">
                <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copyProduct">
                <entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="valueList">
                    <date-filter/><econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>
            <if condition="copySkillStandard">
                <entity-find entity-name="mantle.work.effort.WorkEffortSkillStandard" list="valueList">
                    <econdition field-name="workEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="valueList" entry="value"><set field="value.workEffortId" from="workEffortId"/><entity-create value-field="value"/></iterate>
            </if>

            <if condition="deepClone">
                <entity-find entity-name="mantle.work.effort.WorkEffort" list="childList">
                    <econdition field-name="parentWorkEffortId" from="baseWorkEffortId"/></entity-find>
                <iterate list="childList" entry="child">
                    <service-call name="mantle.work.WorkEffortServices.clone#WorkEffort"
                            in-map="context + [baseWorkEffortId:child.workEffortId, parentWorkEffortId:workEffortId]"/>
                </iterate>
            </if>
        </actions>
    </service>

    <service verb="replace" noun="WorkEffortParty">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="roleTypeId" required="true"/>
            <parameter name="newPartyId" required="true"/>
            <parameter name="statusId"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="wepList">
                <date-filter/><econdition field-name="workEffortId"/><econdition field-name="roleTypeId"/>
            </entity-find>
            <set field="foundExisting" from="false"/>
            <iterate list="wepList" entry="wepValue">
                <if condition="wepValue.partyId != newPartyId">
                    <set field="wepValue.thruDate" from="ec.user.nowTimestamp"/>
                    <entity-update value-field="wepValue"/>

                    <else><set field="foundExisting" from="true"/></else>
                </if>
            </iterate>
            <if condition="!foundExisting">
                <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:workEffortId,
                    partyId:newPartyId, roleTypeId:roleTypeId, fromDate:ec.user.nowTimestamp, statusId:statusId]"/>
            </if>
        </actions>
    </service>

    <service verb="add" noun="WorkEffortProduct">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="productId" required="true"/>
            <auto-parameters entity-name="mantle.work.effort.WorkEffortProduct" include="nonpk"/>
            <parameter name="typeEnumId" required="true"/>
        </in-parameters>
        <out-parameters><parameter name="fromDate" type="Timestamp"/></out-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortProduct" list="existingWepList">
                <date-filter/><econdition field-name="workEffortId"/><econdition field-name="productId"/>
                <econdition field-name="typeEnumId"/></entity-find>
            <if condition="existingWepList">
                <set field="existingWep" from="existingWepList[0]"/>
                <set field="estimatedQuantity" from="(estimatedQuantity ?: 0) + (existingWep.estimatedQuantity ?: 0)"/>
                <entity-set value-field="existingWep" include="nonpk"/>
                <entity-update value-field="existingWep"/>

                <else><service-call name="create#mantle.work.effort.WorkEffortProduct" in-map="context" out-map="context"/></else>
            </if>
        </actions>
    </service>
</services>
